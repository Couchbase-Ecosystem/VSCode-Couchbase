{
    "Create Analytics Query": {
        "prefix": ["@cbanq"],
        "body": ["try {","    final AnalyticsResult result = ${1:cluster}.analyticsQuery(\"${2:SQL++ Query}\");","","    for (JsonObject row : result.rowsAsObject()) {","        System.out.println(\"Found row: \" + row);","    }","","    System.out.println(\"Reported execution time: \"","        + result.metaData().metrics().executionTime());","","    System.out.println();","","} catch (CouchbaseException ex) {","    ex.printStackTrace();","}"],
        "description": "Use SQL++ to Query the Analytics Service on the Couchbase Cluster."
    },
    "Analytics Query With Parameters": {
        "prefix": ["@cbanparamq"],
        "body": ["try {","    final AnalyticsResult result = ${1:cluster}.analyticsQuery(","        \"${2:SQL++ Query}\",","        analyticsOptions().parameters(JsonArray.from(\"${3:parameters}\")) //keep this line for positional parameters","        analyticsOptions().parameters(JsonObject.create().put(${3:parameters}) //keep this line for named parameters","    );","","    for (JsonObject row : result.rowsAsObject()) {","        System.out.println(\"Found row: \" + row);","    }","","    System.out.println(\"Reported execution time: \"","        + result.metaData().metrics().executionTime());","","    System.out.println();","","} catch (CouchbaseException ex) {","    ex.printStackTrace();","}"],
        "description": "Use SQL++ to Query the Analytics Service on the Couchbase Cluster, this uses parameters."
    },
    "Analytics Query Example": {
        "prefix": ["@cbanex"],
        "body": ["import com.couchbase.client.core.error.CouchbaseException;","import com.couchbase.client.java.Cluster;","import com.couchbase.client.java.analytics.AnalyticsResult;","import com.couchbase.client.java.json.JsonObject;","","Cluster cluster = Cluster.connect(\"${1:connectionString}\", \"${2:username}\", \"${3:password}\");","","try {","    final AnalyticsResult result = cluster.analyticsQuery(\"${4:SQL++ Query}\");","","    for (JsonObject row : result.rowsAsObject()) {","        System.out.println(\"Found row: \" + row);","    }","","    System.out.println(\"Reported execution time: \"","        + result.metaData().metrics().executionTime());","","    System.out.println();","","} catch (CouchbaseException ex) {","    ex.printStackTrace();","}"],
        "description": "Example code that shows connecting to a cluster and running an analytics query on it."
    },
    "Analytics Query Import": {
        "prefix": ["@cbanimp"],
        "body": ["import com.couchbase.client.core.error.CouchbaseException;","import com.couchbase.client.java.Scope;","import com.couchbase.client.java.Bucket;","import com.couchbase.client.java.Cluster;","import com.couchbase.client.java.analytics.AnalyticsResult;","import com.couchbase.client.java.analytics.AnalyticsScanConsistency;","import com.couchbase.client.java.analytics.ReactiveAnalyticsResult;","import com.couchbase.client.java.json.JsonArray;","import com.couchbase.client.java.json.JsonObject;","import org.reactivestreams.Subscription;","import reactor.core.publisher.BaseSubscriber;","import reactor.core.publisher.Mono;","","import java.util.UUID;","import java.util.concurrent.atomic.AtomicInteger;","","import static com.couchbase.client.java.analytics.AnalyticsOptions.analyticsOptions;"],
        "description": "Import all necessary Analytics namespaces."
    }
}