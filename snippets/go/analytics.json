{
    "Create Analytics Query": {
        "prefix": ["@cbanq"],
        "body": ["results, err := ${1:cluster}.AnalyticsQuery(\"${2:SQL++ Query}\", nil)","if err != nil {","    panic(err)","}","","var output interface{}","for results.Next() {","    err := results.Row(&output)","    if err != nil {","        panic(err)","    }","    fmt.Println(output)","}","","// always check for errors after iterating.","err = results.Err()","if err != nil {","    panic(err)","}","","fmt.Printf(\"Elapsed time: %d\\n\", metadata.Metrics.ElapsedTime)","fmt.Printf(\"Execution time: %d\\n\", metadata.Metrics.ExecutionTime)","fmt.Printf(\"Result count: %d\\n\", metadata.Metrics.ResultCount)","fmt.Printf(\"Error count: %d\\n\", metadata.Metrics.ErrorCount)"],
        "description": "Use SQL++ to Query the Analytics Service on the Couchbase Cluster."
    },
    "Analytics Query With Parameters": {
        "prefix": ["@cbanparamq"],
        "body": ["results, err := ${1:cluster}.AnalyticsQuery(","    \"${2:SQL++ Query}\",","    &gocb.AnalyticsOptions{","        // Keep one of the following 2 lines, depending on whether you want named or positional parameters.","        PositionalParameters: []interface{}{\"${3:value}\"}, // Positional Parameters","        NamedParameters: map[string]interface{}{\"${4:name}\": \"${5:value}\"}, // Named Parameters","    },",")","","var output interface{}","for results.Next() {","    err := results.Row(&output)","    if err != nil {","        panic(err)","    }","    fmt.Println(output)","}","","// always check for errors after iterating.","err = results.Err()","if err != nil {","    panic(err)","}"],
        "description": "Use SQL++ to Query the Analytics Service on the Couchbase Cluster, this uses parameters."
    },
    "Analytics Query Example": {
        "prefix": ["@cbanex"],
        "body": ["package main","","import (","    \"fmt\"","    \"time\"","","    gocb \"github.com/couchbase/gocb/v2\"",")","","func main() {","","    opts := gocb.ClusterOptions{","        Authenticator: gocb.PasswordAuthenticator{","            Username: \"${1:username}\",","            Password: \"${2:password}\",","        },","    }","    cluster, err := gocb.Connect(\"${3:connection-string}\", opts)","    if err != nil {","        panic(err)","    }","","    err = cluster.WaitUntilReady(5*time.Second, nil)","    if err != nil {","        panic(err)","    }","","    results, err := cluster.AnalyticsQuery(\"${4:SQL++ Query}\", nil)","    if err != nil {","        panic(err)","    }","","    var output interface{}","    for results.Next() {","        err := results.Row(&output)","        if err != nil {","            panic(err)","        }","        fmt.Println(output)","    }","","    // always check for errors after iterating.","    err = results.Err()","    if err != nil {","        panic(err)","    }","}",""],
        "description": "Example code that shows connecting to a cluster and running an analytics query on it."
    },
    "Analytics Query Import": {
        "prefix": ["@cbanimp"],
        "body": ["import (","    \"fmt\"","    \"time\"","","    gocb \"github.com/couchbase/gocb/v2\"",")"],
        "description": "Import all necessary Analytics namespaces."
    }
}