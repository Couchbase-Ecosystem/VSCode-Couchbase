{
    "Connect to Cluster": {
        "prefix": [
            "@cbcon"
        ],
        "body": [
            "from datetime import timedelta",
            "",
            "# needed for any cluster connection",
            "from couchbase.auth import PasswordAuthenticator",
            "from couchbase.cluster import Cluster",
            "# needed for options -- cluster, timeout",
            "from couchbase.options import (ClusterOptions, ClusterTimeoutOptions)",
            "",
            "# Update this to your cluster",
            "endpoint = \"${1:connection-string}\"",
            "username = \"${2:username}\"",
            "password = \"${3:password}\"",
            "bucket_name = \"${4:bucket-name}\"",
            "# User Input ends here.",
            "",
            "# Connect options - authentication",
            "auth = PasswordAuthenticator(username, password)",
            "",
            "# Connect options - global timeout opts",
            "timeout_opts = ClusterTimeoutOptions(kv_timeout=timedelta(seconds=10))",
            "",
            "# get a reference to our cluster",
            "${5:cluster} = Cluster('couchbase://{}'.format(endpoint),",
            "                  ClusterOptions(auth, timeout_options=timeout_opts))",
            "",
            "# Wait until the cluster is ready for use.",
            "${5:cluster}.wait_until_ready(timedelta(seconds=5))",
            "",
            "# get a reference to our bucket",
            "${6:bucket} = ${5:cluster}.bucket(bucket_name)",
            "",
            "${7:collection} = ${6:bucket}.scope(\"${8:scope}\").collection(\"${9:collection}\")"
        ],
        "description": "Connect to a cluster and get a reference to it, a bucket, and a collection."
    },
    "Connect to Cluster with TLS": {
        "prefix": [
            "@cbcontls"
        ],
        "body": [
            "from datetime import timedelta",
            "",
            "# needed for any cluster connection",
            "from couchbase.auth import PasswordAuthenticator",
            "from couchbase.cluster import Cluster",
            "# needed for options -- cluster, timeout",
            "from couchbase.options import (ClusterOptions, ClusterTimeoutOptions)",
            "",
            "# Update this to your cluster",
            "endpoint = \"${1:connection-string}\"",
            "username = \"${2:username}\"",
            "password = \"${3:password}\"",
            "bucket_name = \"${4:bucket-name}\"",
            "# User Input ends here.",
            "",
            "# Connect options - authentication",
            "auth = PasswordAuthenticator(username, password, cert_path=\"${5:/path/to/cluster.crt}\")",
            "",
            "# Connect options - global timeout opts",
            "timeout_opts = ClusterTimeoutOptions(kv_timeout=timedelta(seconds=10))",
            "",
            "# get a reference to our cluster",
            "${6:cluster} = Cluster('couchbases://{}'.format(endpoint),",
            "                  ClusterOptions(auth, timeout_options=timeout_opts))",
            "",
            "# Wait until the cluster is ready for use.",
            "${6:cluster}.wait_until_ready(timedelta(seconds=5))",
            "",
            "# get a reference to our bucket",
            "${7:bucket} = ${6:cluster}.bucket(bucket_name)",
            "",
            "${8:collection} = ${7:bucket}.scope(\"${9:scope}\").collection(\"${10:collection}\")"
        ],
        "description": "Connect to a cluster using TLS and get a reference to it, a bucket, and a collection."
    }
}