{
    "Connect to Cluster": {
        "prefix": ["@cbcon"],
        "body": ["# needed for any cluster connection","from couchbase.cluster import Cluster, ClusterOptions","from couchbase.auth import PasswordAuthenticator","","# needed to support SQL++ query","from couchbase.cluster import QueryOptions","","# get a reference to our cluster","${1:cluster} = Cluster('${2:connection-string}', ClusterOptions(","    PasswordAuthenticator('${3:username}', '${4:password}')))","","# get a reference to our bucket","${5:bucket} = ${1:cluster}.bucket('${6:bucket-name}')","","# get a reference to our collection","${7:collection} = ${5:bucket}.scope(\"${8:scope}\").collection(\"${9:collection}\")"],
        "description": "Connect to a cluster and get a reference to it, a bucket, and a collection."
    },
    "Connect to Cluster with TLS": {
        "prefix": ["@cbcontls"],
        "body": ["# needed for any cluster connection","from couchbase.cluster import Cluster, ClusterOptions","from couchbase.auth import PasswordAuthenticator","","# needed to support SQL++ query","from couchbase.cluster import QueryOptions","","# get a reference to our cluster","${1:cluster} = Cluster('${2:connection-string}', ClusterOptions(","    PasswordAuthenticator('${3:username}', '${4:password}',cert_path=\"${5:/path/to/cluster.crt}\")))","","# get a reference to our bucket","${6:bucket} = ${1:cluster}.bucket('${7:bucket-name}')","","# get a reference to our collection","${8:collection} = ${6:bucket}.scope(\"${9:scope}\").collection(\"${10:collection}\")"],
        "description": "Connect to a cluster using TLS and get a reference to it, a bucket, and a collection."
    },
    "Connect to Cluster DNS SRV": {
        "prefix": ["@cbcondns"],
        "body": ["# needed for any cluster connection","from couchbase.cluster import Cluster, ClusterOptions","from couchbase.auth import PasswordAuthenticator","","# needed to support SQL++ query","from couchbase.cluster import QueryOptions","","# Customize client settings by calling methods on the builder","env = ClusterEnvironment.builder() \\","    .ioConfig(IoConfig.enableDnsSrv(true)) \\","    .build();","","# get a reference to our cluster","${1:cluster} = Cluster('${2:connection-string}', ClusterOptions","    .clusterOptions('${3:username}', '${4:password}')","    .environment(env))","","# get a reference to our bucket","${6:bucket} = ${1:cluster}.bucket('${7:bucket-name}')","","# get a reference to our collection","${8:collection} = ${6:bucket}.scope(\"${9:scope}\").collection(\"${10:collection}\")"],
        "description": "Connect to a cluster using DNS SRV and get a reference to it, a bucket, and a collection."
    }
}